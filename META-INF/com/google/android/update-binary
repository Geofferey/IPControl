#!/sbin/sh

# Copyright (c) 2019 Jaymin Suthar. All rights reserved.
#
# This file is part of "Advanced Charging Switch (ACSwitch)".
#
# ACSwitch is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, only version 3 of the License.
#
# ACSwitch is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ACSwitch.  If not, see <https://www.gnu.org/licenses/>.

INSTALLER=/dev/ACSwitch

MODULE_ROOT_DEF=/data/adb/modules

MIN_API=21

OUTFD=$2
ZIPFILE=$3

DE_DATA=/data/adb
BOOTMODE=false
MAGISK_VER=00000
SYSTEMLESS=true

exec 2>/dev/ACSwitch_install.log

ui_print() {
	$BOOTMODE && echo "$1" || echo -e "ui_print $1\nui_print" >>/proc/self/fd/$OUTFD
}

abort() {
	ui_print "ERROR: $1"
	cleanup
	exit 1
}

print() {
	ui_print "- $1"
}

cleanup() {
	rm -rf $INSTALLER
	umount -l /system_root
	umount -l /system
	umount -l /data
	umount -l /dev/random
}

is_mounted() {
	cat /proc/mounts | grep " $1 " >/dev/null
}

getprop() {
	cat $2 | sed -n "s/^$1=//p"
}

patchstr() {
	ZEROCOUNT=$((${#1} - ${#2}))
	ZEROES=$(yes "\x0" | head -n $ZEROCOUNT | tr -d "\n")
	sed -i "s|${1}|${2}${ZEROES}|g" $3
}

set_perm() {
	chown $2:$3 $1
	chmod $4 $1
	if [ -z "$5" ]; then
		chcon u:object_r:system_file:s0 $1
	else
		chcon $5 $1
	fi
}

set_perm_recursive() {
	find $1/ | while read FILE; do
		if [ -f $FILE ]; then
			set_perm $FILE $2 $3 $5 $6
		else
			set_perm $FILE $2 $3 $4 $6
		fi
	done
}

ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true

print "Constructing environment"

is_mounted /data || mount /data || abort "Could not mount /data"

MAGISK_VER=$(getprop MAGISK_VER_CODE $DE_DATA/magisk/util_functions.sh)
[ -n "$MAGISK_VER" ] && [ $MAGISK_VER -gt 18200 ] || SYSTEMLESS=false

$SYSTEMLESS && RW=ro || RW=rw
mount -o $RW /system || mount -o $RW,remount /system || abort "Could not mount /system"
if [ -f /system/init ]; then
	mkdir /system_root
	mount -o move /system /system_root
	mount -o bind /system_root/system /system
fi

API=$(getprop ro.build.version.sdk /system/build.prop)
[ $API -ge $MIN_API ] || abort "Unsupported API ($API) detected"

ARCH=$(getprop ro.product.cpu.abi /system/build.prop)
case $ARCH in
	arm*) ARCH=arm ;;
	x86*) ARCH=x86 ;;
	*) abort "Unsupported architecture ($ARCH) detected" ;;
esac

if ! $BOOTMODE; then
	mount -o bind /dev/urandom /dev/random
	unset LD_LIBRARY_PATH
	unset LD_PRELOAD
	unset LD_CONFIG_FILE
fi

ui_print "**************************************"
ui_print "  Advanced Charging Switch Installer  "
ui_print "**************************************"

print "Systemless mode: $SYSTEMLESS"
print "Device architecture: $ARCH"

rm -rf $INSTALLER
mkdir -p $INSTALLER

print "Unzipping $ZIPFILE"
unzip -o "$ZIPFILE" -d $INSTALLER >/dev/null
[ -f $INSTALLER/module.prop ] || abort "Could not extract archive"

ui_print "Installing..."

if $SYSTEMLESS; then
	MODULE_ROOT=$DE_DATA/modules_update
	ACSDIR=$MODULE_ROOT/ACSwitch

	SYSTEM=$INSTALLER/$ARCH

	MAGIC_SYSTEM=$ACSDIR/system

	ACSINFO=$INSTALLER/module.prop
	BOOTRUN=$INSTALLER/service.sh
	CFGFILE=$INSTALLER/acs.conf

	[ -d /system/xbin ] && BINDIR=$ACSDIR/system/xbin || BINDIR=$ACSDIR/system/bin

	rm -rf $ACSDIR
	mkdir -p $ACSDIR

	print "Copying files"
	cp -rf $SYSTEM $MAGIC_SYSTEM
	mv -f  $MAGIC_SYSTEM/xbin $BINDIR
	cp -f  $BOOTRUN $ACSINFO $CFGFILE $ACSDIR/

	touch $ACSDIR/auto_mount

	if $BOOTMODE; then
		mkdir $MODULE_ROOT_DEF/ACSwitch
		cp -f $ACSINFO $MODULE_ROOT_DEF/ACSwitch/
		touch $MODULE_ROOT_DEF/ACSwitch/update
	fi

	print "Setting permissions"
	set_perm_recursive $ACSDIR 0 0    0755 0644
	set_perm_recursive $BINDIR 0 2000 0755 4755

else
	ACSDIR=$DE_DATA/ACSwitch

	INITDIR=/system/etc/init.d

	SYSTEM=$INSTALLER/$ARCH

	ACSINFO=$INSTALLER/module.prop
	BOOTRUN=$INSTALLER/service.sh
	CFGFILE=$INSTALLER/acs.conf

	ACSBIN=/system/bin/acs
	LIBSOCK=/system/lib/libsocket++.so
	INITRUN=$INITDIR/02acsd_launcher
	MODINFO=$ACSDIR/acs.prop
	ACSCONF=$ACSDIR/acs.conf

	[ -d $INITDIR ] || abort "Init.d support is not present"

	mv -f $SYSTEM/xbin $SYSTEM/bin

	rm -rf $ACSDIR
	mkdir $ACSDIR

	print "Copying files"
	cp -rf $SYSTEM /system/
	cp -f  $BOOTRUN $INITRUN
	cp -f  $ACSINFO $MODINFO
	cp -f  $CFGFILE $ACSCONF

	print "Patching acs binary"
	patchstr $MODULE_ROOT_DEF $DE_DATA $ACSBIN

	print "Setting permissions"
	set_perm_recursive $ACSDIR  0 0    0700 0600 u:object_r:adb_data_file:s0
	set_perm           $ACSBIN  0 2000 4750
	set_perm           $LIBSOCK 0 0    0644
	set_perm           $INITRUN 0 0    0700
fi

ui_print "Installation completed successfully!"
cleanup
exit 0
